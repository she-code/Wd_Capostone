name: WD Capstone test
on:
  push:
    branches:
      - main
env:
  PG_DATABASE: "${{ secrets.POSTGRES_DB }}"
  PG_USER: "${{ secrets.POSTGRES_USER }}"
  PG_PASSWORD: "${{ secrets.POSTGRES_PASSWORD }}"
jobs:
  run-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: "postgres:11.7"
        env:
          POSTGRES_USER: "${{ secrets.POSTGRES_USER }}"
          POSTGRES_PASSWORD: "${{ secrets.POSTGRES_PASSWORD }}"
          POSTGRES_DB: "${{ secrets.POSTGRES_DB }}"
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
        ports:
          - "5432:5432"
    env:
      PORT: "${{ secrets.PORT }}"
      JWT_SECRET: "${{ secrets.JWT_SECRET }}"
      SESSION_SECRET: "${{ secrets.SESSION_SECRET }}"
      CSURF_SECRET: "${{ secrets.CSURF_SECRET }}"
      DATABASE_URL: "${{ secrets.DATABASE_URL }}"
      EMAIL_HOST: "${{ secrets.EMAIL_HOST }}"
      EMAIL_PASSWORD: "${{ secrets.EMAIL_PASSWORD }}"
      EMAIL_PORT: "${{ secrets.EMAIL_PORT }}"
      EMAIL_USERNAME: "${{ secrets.EMAIL_USERNAME }}"
      EXP: "${{ secrets.EXP }}"
      GMAIL_PASSWORD: "${{ secrets.GMAIL_PASSWORD }}"
      GMAIL_USERNAME: "${{ secrets.GMAIL_USERNAME }}"
      HASH_NUMBER: "${{ secrets.HASH_NUMBER }}"
      JWT_COOKIE_EXPIRES_IN: "${{ secrets.JWT_COOKIE_EXPIRES_IN }}"
      JWT_EXPIRES_IN: "${{ secrets.JWT_EXPIRES_IN }}"
      NODE_ENV: "${{ secrets.NODE_ENV }}"
      SENDGRID_HOST: "${{ secrets.SENDGRID_HOST }}"
      SENDGRID_PASSWORD: "${{ secrets.SENDGRID_PASSWORD }}"
      SENDGRID_PORT: "${{ secrets.SENDGRID_PORT }}"
      SENDGRID_USERNAME: "${{ secrets.SENDGRID_USERNAME }}"
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run build
        run: npm run build
      - name: Code Validation
        run: npm run lint
      - name: Run unit tests
        run: npm test
      - name: Run the app
        id: run-app
        run: |
          npx sequelize-cli db:drop
          npx sequelize-cli db:create
          npx sequelize-cli db:migrate
          PORT=5001 npm start &
          sleep 5
      - name: Run integration tests
        run: |
          npm install cypress cypress-json-results
          npx cypress run
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}

  error-notification:
    needs: run-tests

    runs-on: ubuntu-latest

    if: failure()

    steps:
      - name: Notify on Failure
        uses: rtCamp/action-slack-notify@v2
        with:
          status: ${{ needs.run-tests.result }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: developing
          SLACK_MESSAGE: The workflow  ${{ github.workflow }} of ${{ github.repository }}  ${{ needs.run-tests.result }} in steps resut ${{ STEPS_CONTEXT }}

  deploy:
    needs:
      - run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: "${{ secrets.MY_RENDER_SERVICE_ID }}"
          api-key: "${{ secrets.MY_RENDER_API_KEY }}"

  successful-deployment:
    needs: deploy

    runs-on: ubuntu-latest
    steps:
      - name: Notify on Slack
        uses: rtCamp/action-slack-notify@v2
        with:
          status: ${{ job.status }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: developing
          SLACK_MESSAGE: Successfully deployed
